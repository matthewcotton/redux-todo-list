{"version":3,"sources":["MyNav.js","actions.js","AddTask.js","FilterLink.js","FilterContainer.js","FilterOptions.js","Task.js","VisibleTasks.js","VisibleTaskList.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["MyNav","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Text","href","React","Component","ADD_TASK","REMOVE_TASK","TOGGLE_TASK","SET_VISIBILITY_FILTER","VisibilityFilters","nextTaskId","AddTask","input","Form","onSubmit","e","text","preventDefault","value","trim","props","dispatch","type","Label","Control","as","rows","ref","node","Button","connect","FilterLink","Item","Link","eventKey","this","children","onClick","disabled","active","FilterContainer","state","ownProps","filter","VisibilityFilter","FilterOptions","defaultActiveKey","Task","style","textDecoration","completed","description","removeClick","VisibleTasks","Table","tasks","map","task","onTaskClick","getVisibleTasks","t","console","log","VisibleTaskList","toggleTask","removeTask","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Object","assign","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4334515f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./App.css\";\r\n\r\nclass MyNav extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand>To Don't List</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            </Nav>\r\n            <Nav>\r\n            <Navbar.Text className=\"nav-link\">\r\n                <a href='https://www.matthewcotton.dev/#/projects'>Back to Portfolio</a>\r\n              </Navbar.Text>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNav;\r\n","export const ADD_TASK = \"ADD_TASK\";\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";\r\nexport const TOGGLE_TASK = \"TOGGLE_TASK\";\r\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: \"SHOW_ALL\",\r\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\r\n  SHOW_ACTIVE: \"SHOW_ACTIVE\",\r\n};\r\n\r\nlet nextTaskId = 0;\r\n\r\nexport function addTask(text) {\r\n  return {\r\n    type: ADD_TASK,\r\n    id: nextTaskId++,\r\n    text,\r\n  };\r\n}\r\n\r\nexport function toggleTask(id) {\r\n  return {\r\n    type: TOGGLE_TASK,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function setVisibilityFilter(filter) {\r\n  // console.log(filter)\r\n  return {\r\n    type: SET_VISIBILITY_FILTER,\r\n    filter,\r\n  };\r\n}\r\n\r\nexport function removeTask(id) {\r\n  return {\r\n    type: REMOVE_TASK,\r\n    id,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from 'react-redux';\r\nimport { addTask } from './actions';\r\n\r\nclass AddTask extends React.Component {\r\n  render() {\r\n    let input;\r\n    return (\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          if (!input.value.trim()) {\r\n            return;\r\n          }\r\n          this.props.dispatch(addTask(input.value));\r\n          input.value = \"\";\r\n        }}\r\n      >\r\n        <Form.Label>Enter description of a task not to do:</Form.Label>\r\n        <Form.Control\r\n          className=\"input-area\"\r\n          as=\"textarea\"\r\n          rows=\"2\"\r\n          ref={(node) => {\r\n            input = node;\r\n          }}\r\n        />\r\n        <Button className=\"add-btn\" variant=\"warning\" type=\"submit\">\r\n          Add\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect() (AddTask);\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nclass FilterLink extends React.Component {\r\n  render() {\r\n    return (\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={this.props.children}\r\n          onClick={this.props.onClick}\r\n          disabled={this.props.active}\r\n        >\r\n          {this.props.children}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterLink;","import { connect } from \"react-redux\";\r\nimport { setVisibilityFilter } from \"./actions\";\r\nimport FilterLink from \"./FilterLink\";\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    active: ownProps.filter === state.VisibilityFilter,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n  return {\r\n    onClick: () => {\r\n      //  console.log(ownProps.filter)\r\n      dispatch(setVisibilityFilter(ownProps.filter));\r\n    },\r\n  };\r\n}\r\n\r\nconst FilterContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FilterLink);\r\n\r\nexport default FilterContainer;\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport FilterContainer from \"./FilterContainer\";\r\nimport { VisibilityFilters } from \"./actions\";\r\n\r\nclass FilterOptions extends React.Component {\r\n  render() {\r\n    return (\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"All\">\r\n        <FilterContainer filter={VisibilityFilters.SHOW_ALL}>\r\n          All\r\n        </FilterContainer>\r\n        <FilterContainer filter={VisibilityFilters.SHOW_ACTIVE}>\r\n          Don't Do\r\n        </FilterContainer>\r\n        <FilterContainer filter={VisibilityFilters.SHOW_COMPLETED}>\r\n          Accidentally Done\r\n        </FilterContainer>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterOptions;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Task extends React.Component {\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>{this.props.id}</td>\r\n        <td>\r\n          <span\r\n            style={{\r\n              textDecoration: this.props.completed ? \"line-through\" : \"none\",\r\n            }}\r\n            onClick={this.props.onClick}\r\n          >\r\n            {this.props.description}\r\n          </span>\r\n        </td>\r\n        <td>\r\n          <Button variant=\"warning\" onClick={this.props.removeClick}>\r\n            Remove\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Task from \"./Task\";\r\n\r\nclass VisibleTasks extends React.Component {\r\n  render() {\r\n    return (\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task ID</th>\r\n            <th>Task Description</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((task) => (\r\n            <Task\r\n              key={task.id}\r\n              {...task}\r\n              onClick={() => this.props.onTaskClick(task.id)}\r\n              removeClick={() => this.props.removeClick(task.id)}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisibleTasks;","import { connect } from \"react-redux\";\r\nimport { toggleTask } from \"./actions\";\r\nimport { removeTask } from \"./actions\";\r\nimport VisibleTasks from \"./VisibleTasks\";\r\n\r\n// function getVisibleTasks(tasks, filter) {\r\n//   return (filter === \"SHOW_COMPLETED\"\r\n//     ? tasks.filter((t) => t.completed)\r\n//     : filter === \"SHOW_ACTIVE\"\r\n//     ? tasks.filter((t) => !t.completed)\r\n//     : tasks);\r\n// }\r\n  function getVisibleTasks(tasks, filter) {\r\n  // console.log(filter)\r\n  switch (filter) {\r\n    case 'SHOW_COMPLETED':\r\n      return tasks.filter(t => t.completed)\r\n    case 'SHOW_ACTIVE':\r\n      return tasks.filter(t => !t.completed)\r\n    case 'SHOW_ALL':\r\n    default:\r\n      console.log(\"test1\");\r\n      return tasks;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tasks: getVisibleTasks(state.tasks, state.VisibilityFilter),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onTaskClick: (id) => {\r\n      dispatch(toggleTask(id));\r\n    },\r\n    removeClick: (id) => {\r\n      dispatch(removeTask(id));\r\n    },\r\n  };\r\n}\r\n\r\nconst VisibleTaskList = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VisibleTasks);\r\n\r\nexport default VisibleTaskList;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport MyNav from \"./MyNav\";\nimport AddTask from \"./AddTask\";\nimport FilterOptions from \"./FilterOptions\";\nimport VisibleTaskList from \"./VisibleTaskList\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <MyNav />\n        <Container>\n          <br />\n          <AddTask />\n          <br />\n          <FilterOptions />\n          <VisibleTaskList />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  VisibilityFilters,\r\n  SET_VISIBILITY_FILTER,\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n  TOGGLE_TASK,\r\n} from \"./actions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nfunction visibilityFilterReducer(state = VisibilityFilters.SHOW_ALL, action) {\r\n  // console.log(action.filter);\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction taskReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          description: action.text,\r\n          completed: false,\r\n        },\r\n      ];\r\n    case REMOVE_TASK:\r\n      return state.filter((value) => action.id !== value.id);\r\n    case TOGGLE_TASK:\r\n      // console.log(action)\r\n      return state.map((task) => {\r\n        if (task.id === action.id) {\r\n          return Object.assign({}, task, {\r\n            completed: !task.completed,\r\n          });\r\n        }\r\n        return task;\r\n      });\r\n      default:\r\n        return state\r\n  }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n  VisibilityFilter: visibilityFilterReducer,\r\n  tasks: taskReducer,\r\n})\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./reducer\";\n\nfunction loadState() {\n  const serializedState = localStorage.getItem(\"state\");\n  if (!serializedState) {\n    return undefined;\n  }\n  return JSON.parse(serializedState);\n}\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState);\n\nfunction saveState(state) {\n  const serializedState = JSON.stringify(state);\n  localStorage.setItem(\"state\", serializedState);\n}\n\n// Saves sate everytime the store is altered\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}